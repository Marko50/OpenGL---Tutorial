#version 330 core
  out vec4 FragColor;

  in vec3 Normal;
  in vec3 FragPos;
  in vec3 ourColor;
  in vec2 TexCoord;
  in vec3 lPos;
  in vec3 vPos;

  uniform sampler2D ourTexture1;
  uniform sampler2D ourTexture2;
  uniform vec4 color;
  uniform vec4 lightColor;
  uniform float ambientStrength;

  void main()
  {
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lPos - FragPos);
    float diff = max(dot(norm,lightDir),0.0);
    vec4 diffuse = diff * lightColor;
    vec4 ambient = ambientStrength * lightColor;
    float specularStrength = 0.5;
    vec3 viewDir = normalize(vPos - FragPos);
    vec3 reflectDir = reflect(-lightDir, norm);
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    vec4 specular = specularStrength * spec * lightColor;
    vec4 result = (ambient + diffuse + specular) * color;
    FragColor = result;
  }